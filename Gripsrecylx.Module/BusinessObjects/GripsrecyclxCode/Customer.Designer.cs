//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace Gripsrecylx.Module.BusinessObjects.Company1
{

    public partial class Customer : XPObject
    {
        string fPartyCode;
        public string PartyCode
        {
            get { return fPartyCode; }
            set { SetPropertyValue<string>(nameof(PartyCode), ref fPartyCode, value); }
        }
        int fType;
        public int Type
        {
            get { return fType; }
            set { SetPropertyValue<int>(nameof(Type), ref fType, value); }
        }
        string fName;
        public string Name
        {
            get { return fName; }
            set { SetPropertyValue<string>(nameof(Name), ref fName, value); }
        }
        CustomerGroup fGroup;
        [Association(@"CustomerReferencesCustomerGroup")]
        public CustomerGroup Group
        {
            get { return fGroup; }
            set { SetPropertyValue<CustomerGroup>(nameof(Group), ref fGroup, value); }
        }
        int fPartyType;
        public int PartyType
        {
            get { return fPartyType; }
            set { SetPropertyValue<int>(nameof(PartyType), ref fPartyType, value); }
        }
        DateTime fCreatedOn;
        public DateTime CreatedOn
        {
            get { return fCreatedOn; }
            set { SetPropertyValue<DateTime>(nameof(CreatedOn), ref fCreatedOn, value); }
        }
        DateTime fLastChangedOn;
        public DateTime LastChangedOn
        {
            get { return fLastChangedOn; }
            set { SetPropertyValue<DateTime>(nameof(LastChangedOn), ref fLastChangedOn, value); }
        }
        User fCreatedBy;
        [Association(@"CustomerReferencesUser")]
        public User CreatedBy
        {
            get { return fCreatedBy; }
            set { SetPropertyValue<User>(nameof(CreatedBy), ref fCreatedBy, value); }
        }
        User fLastChangedBy;
        [Association(@"CustomerReferencesUser1")]
        public User LastChangedBy
        {
            get { return fLastChangedBy; }
            set { SetPropertyValue<User>(nameof(LastChangedBy), ref fLastChangedBy, value); }
        }
        Period fActiveFrom;
        [Association(@"CustomerReferencesPeriod")]
        public Period ActiveFrom
        {
            get { return fActiveFrom; }
            set { SetPropertyValue<Period>(nameof(ActiveFrom), ref fActiveFrom, value); }
        }
        Period fActiveTo;
        [Association(@"CustomerReferencesPeriod1")]
        public Period ActiveTo
        {
            get { return fActiveTo; }
            set { SetPropertyValue<Period>(nameof(ActiveTo), ref fActiveTo, value); }
        }
        Company fCompany;
        [Association(@"CustomerReferencesCompany")]
        public Company Company
        {
            get { return fCompany; }
            set { SetPropertyValue<Company>(nameof(Company), ref fCompany, value); }
        }
        string fCode;
        public string Code
        {
            get { return fCode; }
            set { SetPropertyValue<string>(nameof(Code), ref fCode, value); }
        }
        [Association(@"CustomerAddressReferencesCustomer")]
        public XPCollection<CustomerAddress> CustomerAddresses { get { return GetCollection<CustomerAddress>(nameof(CustomerAddresses)); } }
        [Association(@"CustomerConReferencesCustomer")]
        public XPCollection<CustomerCon> CustomerCons { get { return GetCollection<CustomerCon>(nameof(CustomerCons)); } }
        [Association(@"SalesVolumeReferencesCustomer")]
        public XPCollection<SalesVolume> SalesVolumes { get { return GetCollection<SalesVolume>(nameof(SalesVolumes)); } }
    }

}

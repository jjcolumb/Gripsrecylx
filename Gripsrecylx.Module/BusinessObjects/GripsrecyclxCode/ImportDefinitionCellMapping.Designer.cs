//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace Gripsrecylx.Module.BusinessObjects.Company1
{

    public partial class ImportDefinitionCellMapping : XPCustomObject
    {
        Guid fOid;
        [Key(true)]
        public Guid Oid
        {
            get { return fOid; }
            set { SetPropertyValue<Guid>(nameof(Oid), ref fOid, value); }
        }
        int fOrderNumber;
        public int OrderNumber
        {
            get { return fOrderNumber; }
            set { SetPropertyValue<int>(nameof(OrderNumber), ref fOrderNumber, value); }
        }
        int fColumnNumber;
        public int ColumnNumber
        {
            get { return fColumnNumber; }
            set { SetPropertyValue<int>(nameof(ColumnNumber), ref fColumnNumber, value); }
        }
        string fPropertyName;
        public string PropertyName
        {
            get { return fPropertyName; }
            set { SetPropertyValue<string>(nameof(PropertyName), ref fPropertyName, value); }
        }
        string fPropertyCaption;
        public string PropertyCaption
        {
            get { return fPropertyCaption; }
            set { SetPropertyValue<string>(nameof(PropertyCaption), ref fPropertyCaption, value); }
        }
        string fPropertyType;
        public string PropertyType
        {
            get { return fPropertyType; }
            set { SetPropertyValue<string>(nameof(PropertyType), ref fPropertyType, value); }
        }
        string fDefaultValue;
        public string DefaultValue
        {
            get { return fDefaultValue; }
            set { SetPropertyValue<string>(nameof(DefaultValue), ref fDefaultValue, value); }
        }
        string fFindByField;
        public string FindByField
        {
            get { return fFindByField; }
            set { SetPropertyValue<string>(nameof(FindByField), ref fFindByField, value); }
        }
        string fAdditionalCriteria;
        public string AdditionalCriteria
        {
            get { return fAdditionalCriteria; }
            set { SetPropertyValue<string>(nameof(AdditionalCriteria), ref fAdditionalCriteria, value); }
        }
        int fWhenFindingLookupValue;
        public int WhenFindingLookupValue
        {
            get { return fWhenFindingLookupValue; }
            set { SetPropertyValue<int>(nameof(WhenFindingLookupValue), ref fWhenFindingLookupValue, value); }
        }
        ImportCrossReference fCrossReference;
        [Association(@"ImportDefinitionCellMappingReferencesImportCrossReference")]
        public ImportCrossReference CrossReference
        {
            get { return fCrossReference; }
            set { SetPropertyValue<ImportCrossReference>(nameof(CrossReference), ref fCrossReference, value); }
        }
        string fIgnoredPrefix;
        [Size(50)]
        public string IgnoredPrefix
        {
            get { return fIgnoredPrefix; }
            set { SetPropertyValue<string>(nameof(IgnoredPrefix), ref fIgnoredPrefix, value); }
        }
        ImportDefinition fImportDefinition;
        [Association(@"ImportDefinitionCellMappingReferencesImportDefinition")]
        public ImportDefinition ImportDefinition
        {
            get { return fImportDefinition; }
            set { SetPropertyValue<ImportDefinition>(nameof(ImportDefinition), ref fImportDefinition, value); }
        }
        int fRowNumber;
        public int RowNumber
        {
            get { return fRowNumber; }
            set { SetPropertyValue<int>(nameof(RowNumber), ref fRowNumber, value); }
        }
        string fPropertyClass;
        public string PropertyClass
        {
            get { return fPropertyClass; }
            set { SetPropertyValue<string>(nameof(PropertyClass), ref fPropertyClass, value); }
        }
        [Association(@"ComplexFileDefinitionReferencesImportDefinitionCellMapping")]
        public XPCollection<ComplexFileDefinition> ComplexFileDefinitions { get { return GetCollection<ComplexFileDefinition>(nameof(ComplexFileDefinitions)); } }
        [Association(@"ImportDefinitionReferencesImportDefinitionCellMapping")]
        public XPCollection<ImportDefinition> ImportDefinitions { get { return GetCollection<ImportDefinition>(nameof(ImportDefinitions)); } }
    }

}

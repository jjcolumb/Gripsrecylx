//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace Gripsrecylx.Module.BusinessObjects.Company1
{

    public partial class FactSUPItems : XPObject
    {
        DateTime fCreatedOn;
        public DateTime CreatedOn
        {
            get { return fCreatedOn; }
            set { SetPropertyValue<DateTime>(nameof(CreatedOn), ref fCreatedOn, value); }
        }
        DateTime fLastChangedOn;
        public DateTime LastChangedOn
        {
            get { return fLastChangedOn; }
            set { SetPropertyValue<DateTime>(nameof(LastChangedOn), ref fLastChangedOn, value); }
        }
        User fCreatedBy;
        [Association(@"FactSUPItemsReferencesUser")]
        public User CreatedBy
        {
            get { return fCreatedBy; }
            set { SetPropertyValue<User>(nameof(CreatedBy), ref fCreatedBy, value); }
        }
        User fLastChangedBy;
        [Association(@"FactSUPItemsReferencesUser1")]
        public User LastChangedBy
        {
            get { return fLastChangedBy; }
            set { SetPropertyValue<User>(nameof(LastChangedBy), ref fLastChangedBy, value); }
        }
        Period fActiveFrom;
        [Association(@"FactSUPItemsReferencesPeriod")]
        public Period ActiveFrom
        {
            get { return fActiveFrom; }
            set { SetPropertyValue<Period>(nameof(ActiveFrom), ref fActiveFrom, value); }
        }
        Period fActiveTo;
        [Association(@"FactSUPItemsReferencesPeriod1")]
        public Period ActiveTo
        {
            get { return fActiveTo; }
            set { SetPropertyValue<Period>(nameof(ActiveTo), ref fActiveTo, value); }
        }
        Company fCompany;
        [Association(@"FactSUPItemsReferencesCompany")]
        public Company Company
        {
            get { return fCompany; }
            set { SetPropertyValue<Company>(nameof(Company), ref fCompany, value); }
        }
        DimProduct fProduct;
        [Association(@"FactSUPItemsReferencesDimProduct")]
        public DimProduct Product
        {
            get { return fProduct; }
            set { SetPropertyValue<DimProduct>(nameof(Product), ref fProduct, value); }
        }
        DimCustomer fCustomer;
        [Association(@"FactSUPItemsReferencesDimCustomer")]
        public DimCustomer Customer
        {
            get { return fCustomer; }
            set { SetPropertyValue<DimCustomer>(nameof(Customer), ref fCustomer, value); }
        }
        int fSource;
        public int Source
        {
            get { return fSource; }
            set { SetPropertyValue<int>(nameof(Source), ref fSource, value); }
        }
        EnumInstance fDestination;
        [Association(@"FactSUPItemsReferencesEnumInstance")]
        public EnumInstance Destination
        {
            get { return fDestination; }
            set { SetPropertyValue<EnumInstance>(nameof(Destination), ref fDestination, value); }
        }
        DimMaterial fMaterialType;
        [Association(@"FactSUPItemsReferencesDimMaterial")]
        public DimMaterial MaterialType
        {
            get { return fMaterialType; }
            set { SetPropertyValue<DimMaterial>(nameof(MaterialType), ref fMaterialType, value); }
        }
        DimItemType fItemType;
        [Association(@"FactSUPItemsReferencesDimItemType")]
        public DimItemType ItemType
        {
            get { return fItemType; }
            set { SetPropertyValue<DimItemType>(nameof(ItemType), ref fItemType, value); }
        }
        double fTotalQuantity;
        public double TotalQuantity
        {
            get { return fTotalQuantity; }
            set { SetPropertyValue<double>(nameof(TotalQuantity), ref fTotalQuantity, value); }
        }
        DateTime fCalcDate;
        public DateTime CalcDate
        {
            get { return fCalcDate; }
            set { SetPropertyValue<DateTime>(nameof(CalcDate), ref fCalcDate, value); }
        }
    }

}
